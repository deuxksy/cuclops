plugins {
  id 'java'
  id 'application'
  id "idea"
  id 'org.springframework.boot' version '2.3.4.RELEASE'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
  id "com.bmuschko.docker-spring-boot-application" version "6.6.1"
  id "com.gorylenko.gradle-git-properties" version "2.2.3"
}

group = 'com.zzizily'
version = '0.0.3-SNAPSHOT'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
  mavenCentral()
  jcenter()
}

ext {
  set('springCloudVersion', "Hoxton.SR8")
}

wrapper {
  gradleVersion = gradleVersion
  distributionType = Wrapper.DistributionType.BIN
}

jar {
  enabled = true
  archiveVersion.set("latest")
  manifest {
    attributes(
      "Implementation-Title": "${project.name}",
      "Implementation-Version": "${project.version}"
    )
  }
}


gitProperties {
  dateFormat = "yyyy-MM-dd HH:mm:ss"
  dateFormatTimeZone = "Asia/Seoul"
}

docker {
  registryCredentials {
//    url = 'https://index.docker.io/v1/'
    username = System.getenv("DOCKER_REPO_USERNAME")
    password = System.getenv("DOCKER_REPO_PASSWORD")
    email = System.getenv("EMAIL")
  }

  springBootApplication {
    baseImage = "openjdk:11.0.8-jre-slim"
    maintainer = "SeokYoung.Kim '"+System.getenv("EMAIL")+"'"
    ports = [8888]
    images = [
      "ghcr.io/"+System.getenv("DOCKER_REPO_USERNAME")+"/" + applicationName + ":" + project.version,
      "ghcr.io/"+System.getenv("DOCKER_REPO_USERNAME")+"/" + applicationName + ":latest"
    ]
//    jvmArgs = []
//    mainClassName = ""
  }
}

springBoot {
  buildInfo()
}

dependencies {
  implementation 'org.springframework.cloud:spring-cloud-config-server'
  implementation 'org.springframework.boot:spring-boot-starter-jdbc'

  // DB
  implementation "org.flywaydb:flyway-core" //db 자동화
  implementation "com.h2database:h2" // 메모리 db 사용
  implementation "org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16" //db 로그

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
  }
  testRuntimeOnly "com.h2database:h2"
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

test {
  //enabled = false //false 선언 하면 test 무시 하고 넘어감
  useJUnitPlatform()
}